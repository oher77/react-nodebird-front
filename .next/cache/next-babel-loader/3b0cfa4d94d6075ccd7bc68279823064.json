{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  // 속성들 서버 개발자한테 미리 물어본다. 이런식으로 달라고 요청하거나\n  mainPosts: [{\n    // User, Image, Commnets는 대문자로 시작하는 이유: 시퀄라이져에서 다른 것과 합쳐서 나오는 정보는 대문자로 출력해서 보내준다.\n    // 어떻게 데이터 보내줄건지 서버개발자한테 요청한다.\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '허유즈'\n    },\n    content: '첫번째 게시글 #해시택 #익스프렛',\n    Images: [{\n      src: 'https://m.beadsallmarket.com/web/product/big/201705/4508_shop1_566269.jpg'\n    }, {\n      src: 'https://www.docdocdoc.co.kr/news/photo/201709/1046830_1107542_5752.jpg'\n    }, {\n      src: 'https://m.nemone.co.kr/web/product/big/201805/3973_shop1_468769.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: '조유즈'\n      },\n      content: '이거시 오늘 점식 메뉴ㅋㅋ'\n    }, {\n      User: {\n        nickname: '장유즈'\n      },\n      content: '이거시 오늘의 간식!!~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null\n}; // action이름을 상수로 빼주면 오타가 났을 때 에러에 잡혀서 편리하다.\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPostRequest = {\n  type: ADD_POST_REQUEST\n};\nexport const addCommentRequest = {\n  type: ADD_COMMENT_REQUEST\n};\nconst dummyPost = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '허유즈'\n  },\n  content: '더미데이터 입니다.',\n  Images: [{\n    src: 'https://m.beadsallmarket.com/web/product/big/201705/4508_shop1_566269.jpg'\n  }, {\n    src: 'https://www.docdocdoc.co.kr/news/photo/201709/1046830_1107542_5752.jpg'\n  }],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentdone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: true,\n        addCommentError: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return {\n        addCommentLoading: false,\n        addCommentError: action.error\n      };\n\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostdone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addPostLoading: true,\n        addPostDone: true,\n        addPostError: true\n      });\n\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/heruse/Study/React/react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostRequest","type","addCommentRequest","dummyPost","reducer","state","action","addCommentLoading","addCommentdone","addCommentError","addCommentDone","error","addPostdone"],"mappings":"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","sourcesContent":["export const initialState = {\n  // 속성들 서버 개발자한테 미리 물어본다. 이런식으로 달라고 요청하거나\n  mainPosts: [{\n    // User, Image, Commnets는 대문자로 시작하는 이유: 시퀄라이져에서 다른 것과 합쳐서 나오는 정보는 대문자로 출력해서 보내준다.\n    // 어떻게 데이터 보내줄건지 서버개발자한테 요청한다.\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '허유즈',\n    },\n    content: '첫번째 게시글 #해시택 #익스프렛',\n    Images: [\n      { src: 'https://m.beadsallmarket.com/web/product/big/201705/4508_shop1_566269.jpg' },\n      { src: 'https://www.docdocdoc.co.kr/news/photo/201709/1046830_1107542_5752.jpg' },\n      { src: 'https://m.nemone.co.kr/web/product/big/201805/3973_shop1_468769.jpg' },\n    ],\n    Comments: [\n      {\n        User: {\n          nickname: '조유즈',\n        },\n        content: '이거시 오늘 점식 메뉴ㅋㅋ',\n      },\n      {\n        User: {\n          nickname: '장유즈',\n        },\n        content: '이거시 오늘의 간식!!~',\n      },\n    ],\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n};\n// action이름을 상수로 빼주면 오타가 났을 때 에러에 잡혀서 편리하다.\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPostRequest = {\n  type: ADD_POST_REQUEST,\n};\nexport const addCommentRequest = {\n  type: ADD_COMMENT_REQUEST,\n};\nconst dummyPost = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '허유즈',\n  },\n  content: '더미데이터 입니다.',\n  Images: [\n    { src: 'https://m.beadsallmarket.com/web/product/big/201705/4508_shop1_566269.jpg' },\n    { src: 'https://www.docdocdoc.co.kr/news/photo/201709/1046830_1107542_5752.jpg' },\n  ],\n  Comments: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentdone: false,\n        addCommentError: null,\n      };\n    case ADD_COMMENT_SUCCESS:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentDone: true,\n        addCommentError: true,\n      };\n    case ADD_COMMENT_FAILURE:\n      return {\n        addCommentLoading: false,\n        addCommentError: action.error,\n      };\n\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostdone: false,\n        addPostError: null,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addPostLoading: true,\n        addPostDone: true,\n        addPostError: true,\n      };\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}