{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/heruse/Study/React/react-nodebird/prepare/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPostRequest } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPostRequest(text));\n    postInput.value = '';\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    console.log(imageInput);\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"mulipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    id: \"postInput\",\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"wGFOlQ92evPRvIRjMIaFhYjV24Y=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/heruse/Study/React/react-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","useInput","addPostRequest","PostForm","dispatch","state","post","imagePaths","addPostDone","text","onChangeText","setText","imageInput","onSubmit","postInput","value","onClickImageUpload","console","log","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPostRequest } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef();\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPostRequest(text));\n    postInput.value = '';\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    console.log(imageInput);\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"mulipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        id=\"postInput\"\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <input type=\"file\" multiple hidden ref={imageInput} />\n      <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n      <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={v} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}